//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Coomuce.GestorReportes.Entidad
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CoomuceEntities : DbContext
    {
        public CoomuceEntities()
            : base("name=CoomuceEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ciudad> Ciudad { get; set; }
        public virtual DbSet<ConfiguracionCuerpoCorreo> ConfiguracionCuerpoCorreo { get; set; }
        public virtual DbSet<ConfiguracionGeneral> ConfiguracionGeneral { get; set; }
        public virtual DbSet<Departamento> Departamento { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<RolMenu> RolMenu { get; set; }
        public virtual DbSet<Vista> Vista { get; set; }
        public virtual DbSet<AsistenciaGeneral> AsistenciaGeneral { get; set; }
        public virtual DbSet<EncuestaCategoria> EncuestaCategoria { get; set; }
        public virtual DbSet<EncuestaEps> EncuestaEps { get; set; }
        public virtual DbSet<EncuestaEpsRespLiteral> EncuestaEpsRespLiteral { get; set; }
        public virtual DbSet<EncuestaEpsRespPregunta> EncuestaEpsRespPregunta { get; set; }
        public virtual DbSet<EncuestaIps> EncuestaIps { get; set; }
        public virtual DbSet<EncuestaIpsRespLiteral> EncuestaIpsRespLiteral { get; set; }
        public virtual DbSet<EncuestaIpsRespPregunta> EncuestaIpsRespPregunta { get; set; }
        public virtual DbSet<EncuestaLiteral> EncuestaLiteral { get; set; }
        public virtual DbSet<EncuestaPregunta> EncuestaPregunta { get; set; }
        public virtual DbSet<Fuan> Fuan { get; set; }
        public virtual DbSet<FuanAfiliado> FuanAfiliado { get; set; }
        public virtual DbSet<FuanAnexos> FuanAnexos { get; set; }
        public virtual DbSet<FuanBeneficiariosAfiliado> FuanBeneficiariosAfiliado { get; set; }
        public virtual DbSet<FuanDeclaracionAutorizacion> FuanDeclaracionAutorizacion { get; set; }
        public virtual DbSet<FuanEmpleadorAfiliado> FuanEmpleadorAfiliado { get; set; }
        public virtual DbSet<FuanEntidadTerritorial> FuanEntidadTerritorial { get; set; }
        public virtual DbSet<FuanIpsPrimariaAfiliado> FuanIpsPrimariaAfiliado { get; set; }
        public virtual DbSet<FuanReporteNovedad> FuanReporteNovedad { get; set; }
        public virtual DbSet<FuanTipoNovedad> FuanTipoNovedad { get; set; }
        public virtual DbSet<HistorialUltimosFormatos> HistorialUltimosFormatos { get; set; }
        public virtual DbSet<IfppirRespuestaFactor> IfppirRespuestaFactor { get; set; }
        public virtual DbSet<InfoHfdfr> InfoHfdfr { get; set; }
        public virtual DbSet<InfoIfppir> InfoIfppir { get; set; }
        public virtual DbSet<InfoPurisu> InfoPurisu { get; set; }
        public virtual DbSet<ListaAsistenciaGeneral> ListaAsistenciaGeneral { get; set; }
        public virtual DbSet<Purisu> Purisu { get; set; }
        public virtual DbSet<CicloVital> CicloVital { get; set; }
        public virtual DbSet<CicloVitalGestante> CicloVitalGestante { get; set; }
        public virtual DbSet<CicloVitalPreguntasSubFactorRiesgo> CicloVitalPreguntasSubFactorRiesgo { get; set; }
        public virtual DbSet<CondicionDiscapacidad> CondicionDiscapacidad { get; set; }
        public virtual DbSet<CondicionVivienda> CondicionVivienda { get; set; }
        public virtual DbSet<DeclaracionAutorizacion> DeclaracionAutorizacion { get; set; }
        public virtual DbSet<DisposicionBasura> DisposicionBasura { get; set; }
        public virtual DbSet<DisposicionExcreta> DisposicionExcreta { get; set; }
        public virtual DbSet<Eje> Eje { get; set; }
        public virtual DbSet<FactorRiesgo> FactorRiesgo { get; set; }
        public virtual DbSet<GrupoInteres> GrupoInteres { get; set; }
        public virtual DbSet<GrupoPoblacional> GrupoPoblacional { get; set; }
        public virtual DbSet<GruposFocales> GruposFocales { get; set; }
        public virtual DbSet<Ips> Ips { get; set; }
        public virtual DbSet<Modulo> Modulo { get; set; }
        public virtual DbSet<MotivoConsulta> MotivoConsulta { get; set; }
        public virtual DbSet<MotivoContacto> MotivoContacto { get; set; }
        public virtual DbSet<MotivoTraslado> MotivoTraslado { get; set; }
        public virtual DbSet<NivelEducativo> NivelEducativo { get; set; }
        public virtual DbSet<PiezasInformativas> PiezasInformativas { get; set; }
        public virtual DbSet<PreguntasSubFactorRiesgo> PreguntasSubFactorRiesgo { get; set; }
        public virtual DbSet<Procedencia> Procedencia { get; set; }
        public virtual DbSet<ProgramaResolucion412> ProgramaResolucion412 { get; set; }
        public virtual DbSet<SeguimientoProgramasIntervencionRiesgo> SeguimientoProgramasIntervencionRiesgo { get; set; }
        public virtual DbSet<SubFactorRiesgo> SubFactorRiesgo { get; set; }
        public virtual DbSet<Tenencia> Tenencia { get; set; }
        public virtual DbSet<TipoAfiliacion> TipoAfiliacion { get; set; }
        public virtual DbSet<TipoAfiliado> TipoAfiliado { get; set; }
        public virtual DbSet<TipoAnimal> TipoAnimal { get; set; }
        public virtual DbSet<TipoCombustible> TipoCombustible { get; set; }
        public virtual DbSet<TipoCotizante> TipoCotizante { get; set; }
        public virtual DbSet<TipoDiscapacidad> TipoDiscapacidad { get; set; }
        public virtual DbSet<TipoEtnia> TipoEtnia { get; set; }
        public virtual DbSet<TipoIdentificacion> TipoIdentificacion { get; set; }
        public virtual DbSet<TipoNovedad> TipoNovedad { get; set; }
        public virtual DbSet<TipoParentesco> TipoParentesco { get; set; }
        public virtual DbSet<TipoRegimen> TipoRegimen { get; set; }
        public virtual DbSet<TipoSexo> TipoSexo { get; set; }
        public virtual DbSet<TipoTramite> TipoTramite { get; set; }
        public virtual DbSet<TipoVisitaDomiciliaria> TipoVisitaDomiciliaria { get; set; }
        public virtual DbSet<TipoVivienda> TipoVivienda { get; set; }
        public virtual DbSet<TipoZona> TipoZona { get; set; }
        public virtual DbSet<TratamientoAgua> TratamientoAgua { get; set; }
        public virtual DbSet<Unidad> Unidad { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        [DbFunction("CoomuceEntities", "fnMotivoConsulta")]
        public virtual IQueryable<fnMotivoConsulta_Result> fnMotivoConsulta(Nullable<int> idInfoPurisu, Nullable<int> idPurisu)
        {
            var idInfoPurisuParameter = idInfoPurisu.HasValue ?
                new ObjectParameter("idInfoPurisu", idInfoPurisu) :
                new ObjectParameter("idInfoPurisu", typeof(int));
    
            var idPurisuParameter = idPurisu.HasValue ?
                new ObjectParameter("idPurisu", idPurisu) :
                new ObjectParameter("idPurisu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnMotivoConsulta_Result>("[CoomuceEntities].[fnMotivoConsulta](@idInfoPurisu, @idPurisu)", idInfoPurisuParameter, idPurisuParameter);
        }
    
        [DbFunction("CoomuceEntities", "fnMotivoContacto")]
        public virtual IQueryable<fnMotivoContacto_Result> fnMotivoContacto(Nullable<int> idInfoPurisu, Nullable<int> idPurisu)
        {
            var idInfoPurisuParameter = idInfoPurisu.HasValue ?
                new ObjectParameter("idInfoPurisu", idInfoPurisu) :
                new ObjectParameter("idInfoPurisu", typeof(int));
    
            var idPurisuParameter = idPurisu.HasValue ?
                new ObjectParameter("idPurisu", idPurisu) :
                new ObjectParameter("idPurisu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnMotivoContacto_Result>("[CoomuceEntities].[fnMotivoContacto](@idInfoPurisu, @idPurisu)", idInfoPurisuParameter, idPurisuParameter);
        }
    
        [DbFunction("CoomuceEntities", "fnPiezasInformativas")]
        public virtual IQueryable<fnPiezasInformativas_Result> fnPiezasInformativas(Nullable<int> idInfoPurisu, Nullable<int> idPurisu)
        {
            var idInfoPurisuParameter = idInfoPurisu.HasValue ?
                new ObjectParameter("idInfoPurisu", idInfoPurisu) :
                new ObjectParameter("idInfoPurisu", typeof(int));
    
            var idPurisuParameter = idPurisu.HasValue ?
                new ObjectParameter("idPurisu", idPurisu) :
                new ObjectParameter("idPurisu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnPiezasInformativas_Result>("[CoomuceEntities].[fnPiezasInformativas](@idInfoPurisu, @idPurisu)", idInfoPurisuParameter, idPurisuParameter);
        }
    }
}
